// snapshot.js
// 1) Playwright„Åß„Éö„Éº„Ç∏„ÅÆË°®„Éá„Éº„Çø„Å†„ÅëÊäú„Åè
// 2) node-canvas „ÅßTop20„ÅÆ„É©„É≥„Ç≠„É≥„Ç∞ÁîªÂÉè„ÇíÁîüÊàêÔºàDiscord„Å´Ë≤º„Çå„ÇãPNGÔºâ

import { chromium } from "playwright";   // package: playwright
import fs from "fs";
import { createCanvas } from "canvas";   // package: canvas

const URL = "https://www.flash.trade/leaderboard";

function fmt(n) {
  if (n === null || n === undefined || isNaN(Number(n))) return "";
  return Number(n).toLocaleString("en-US");
}

(async () => {
  // ===== 1) ÂèñÂæó =====
  const browser = await chromium.launch({ headless: true, args: ["--no-sandbox"] });
  const page = await browser.newPage({ viewport: { width: 1400, height: 1600 } });

  await page.goto(URL, { waitUntil: "networkidle", timeout: 120000 });

  // SPAÊèèÁîªÂæÖ„Å°Ôºö„ÉÜ„Éº„Éñ„É´Ë°å„ÅåÁèæ„Çå„Çã„Åæ„ÅßÂæÖÊ©üÔºàÊúÄÂ§ß60ÁßíÔºâ
  await page.waitForFunction(() => {
    const rows =
      document.querySelectorAll("table tbody tr").length ||
      document.querySelectorAll("[data-testid*=row], .row").length;
    return rows >= 10;
  }, { timeout: 60000 });

  // „Éö„Éº„Ç∏„ÅÆDOM„Åã„ÇâTop20„ÇíÊäΩÂá∫
  const rows = await page.evaluate(() => {
    // „Åæ„Åö„ÉÜ„Éº„Éñ„É´ÊÉ≥ÂÆö
    const trs = Array.from(document.querySelectorAll("table tbody tr")).slice(0, 20);
    if (trs.length) {
      return trs.map((tr, i) => {
        const tds = Array.from(tr.querySelectorAll("td")).map(td => td.innerText.trim());
        // „Éö„Éº„Ç∏„ÅÆÂàóÊßãÊàê„Å´Âêà„Çè„Åõ„Å¶‰∏¶„Å≥„ÇíË™øÊï¥ÔºàÂøÖË¶Å„Å™„Çâ„Åì„Åì„ÇíÂæÆ‰øÆÊ≠£Ôºâ
        // ÊúüÂæÖ: [Address, Level, FAF Staked, Total Volume Traded, ...] „ÅÆ„Çà„ÅÜ„Å™‰∏¶„Å≥
        return {
          rank: i + 1,
          address: tds[0] || "",
          level: tds[1] || "",
          faf: tds[2] || "",
          volume: (tds[3] || "").replace(/[$,]/g, ""),
        };
      });
    }
    // Fallback: „Ç´„Çπ„Çø„É†Ë°åË¶ÅÁ¥†Ôºàdata-testidÁ≠âÔºâ
    const els = Array.from(document.querySelectorAll("[data-testid*=row], .row")).slice(0, 20);
    return els.map((el, i) => {
      const text = el.innerText.split("\n").map(s => s.trim()).filter(Boolean);
      const address = text[0] || "";
      const level = (text.find(t => t.startsWith("LVL")) || "").trim();
      const faf = (text.find(t => /^[0-9,]+ FAF/.test(t)) || "").replace(/[^\d,]/g, "");
      const volStr = (text.find(t => t.includes("$")) || "").replace(/[$,]/g, "");
      return { rank: i + 1, address, level, faf, volume: volStr };
    });
  });

  await browser.close();

  // ‰∏á‰∏Ä0‰ª∂„Å™„Çâ„ÄÅÁ©∫„ÅÆÁîªÂÉè„ÇíÂá∫„Åï„Åö„É≠„Ç∞„Å†„Åë
  if (!rows || rows.length === 0) {
    console.log("No rows captured. The page structure may have changed.");
    process.exit(0);
  }

  // ===== 2) ÁîªÂÉèÁîüÊàê =====
  const W = 1300, H = 1600;                 // ÁîªÂÉè„Çµ„Ç§„Ç∫ÔºàDiscordÂêë„ÅëÔºâ
  const canvas = createCanvas(W, H);
  const ctx = canvas.getContext("2d");

  // ËÉåÊôØ
  ctx.fillStyle = "#182428";
  ctx.fillRect(0, 0, W, H);

  // „Çø„Ç§„Éà„É´
  ctx.fillStyle = "#EFFFF9";
  ctx.font = "bold 48px Arial";
  ctx.fillText("‚ö° FlashTrade Leaderboard ‚Äî Top 20", 50, 60);

  // „Çπ„Éä„ÉÉ„Éó„Ç∑„Éß„ÉÉ„ÉàÊôÇÂàªÔºàUTCË°®Á§∫Ôºâ
  const now = new Date();
  const ts = now.toISOString().slice(0, 16).replace("T", " ");
  ctx.font = "22px Arial";
  ctx.fillStyle = "#ABBDB6";
  ctx.fillText(`Snapshot: UTC ${ts}`, 50, 95);

  // ÂêàË®àÔºàTotal Volume TradedÔºâ
  const totalVol = rows.reduce((s, r) => s + (Number(r.volume) || 0), 0);
  ctx.font = "bold 30px Arial";
  ctx.fillStyle = "#FFEBAA";
  ctx.fillText(`Total Volume Traded (Today): $${fmt(totalVol)} (‚Äì vs Yesterday)`, 50, 130);

  // „Éò„ÉÉ„ÉÄ„Éº
  const X = { rank: 60, addr: 160, level: 520, faf: 640, vol: 860 };
  ctx.fillStyle = "#D2E6E1";
  ctx.font = "bold 28px Arial";
  ctx.fillText("Rank",   X.rank,  170);
  ctx.fillText("Address",X.addr,  170);
  ctx.fillText("Level",  X.level, 170);
  ctx.fillText("FAF",    X.faf,   170);
  ctx.fillText("Volume", X.vol,   170);

  // Ë°åÊèèÁîª
  let y = 210;
  const rowH = 60;
  for (const r of rows) {
    // ÂÅ∂Êï∞Ë°å„Çπ„Éà„É©„Ç§„Éó
    if (r.rank % 2 === 0) {
      ctx.fillStyle = "#1E2E32";
      ctx.fillRect(40, y - 30, W - 80, rowH - 10);
    }
    // „É°„ÉÄ„É´ or „É©„É≥„ÇØ
    ctx.font = "26px Arial";
    if (r.rank === 1) { ctx.fillStyle = "#FFD700"; ctx.fillText("ü•á", X.rank, y); }
    else if (r.rank === 2) { ctx.fillStyle = "#C0C0C0"; ctx.fillText("ü•à", X.rank, y); }
    else if (r.rank === 3) { ctx.fillStyle = "#CD7F32"; ctx.fillText("ü•â", X.rank, y); }
    else { ctx.fillStyle = "#C8DCD7"; ctx.fillText(String(r.rank).padStart(2,"0"), X.rank, y); }

    // ÊñáÂ≠óÂàó
    ctx.fillStyle = "#E0EBE7";
    ctx.fillText((r.address || "").slice(0, 20) + (r.address?.length > 20 ? "‚Ä¶" : ""), X.addr, y);
    ctx.fillStyle = "#B5D2CC";
    ctx.fillText(r.level || "", X.level, y);
    ctx.fillText(r.faf ? fmt(r.faf) : "", X.faf, y);
    ctx.fillStyle = "#F0FFFA";
    ctx.fillText(`$${fmt(r.volume)}`, X.vol, y);

    y += rowH;
  }

  // ÂÇôËÄÉ
  ctx.strokeStyle = "#587072"; ctx.lineWidth = 2;
  ctx.beginPath(); ctx.moveTo(40, y + 10); ctx.lineTo(W - 40, y + 10); ctx.stroke();
  ctx.fillStyle = "#ADBFBA"; ctx.font = "20px Arial";
  ctx.fillText("Medals for Top 3. Œî/Rank Diff will appear from the second day.", 50, y + 40);

  // ‰øùÂ≠ò
  fs.writeFileSync("leaderboard_snapshot.png", canvas.toBuffer("image/png"));
  console.log("‚úÖ Saved: leaderboard_snapshot.png");
})();
